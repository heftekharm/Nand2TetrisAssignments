@256    //Start             //0
D=A             //1
@SP             //2
M=D             //3
@Sys.init             //4
0;JMP             //5
(Main.fetest)    //FUNCTION Main.fetest 0
@0    //POP argument 0             //6
D=A             //7
@ARG             //8
A=M+D             //9
D=M             //10
@SP             //11
A=M             //12
M=D             //13
@SP             //14
M=M+1             //15
@1    //POP constant 1             //16
D=A             //17
@SP             //18
A=M             //19
M=D             //20
@SP             //21
M=M+1             //22
@SP    //lt             //23
M=M-1             //24
A=M             //25
D=M             //26
A=A-1             //27
D=M-D             //28
M=-1             //29
@Label1             //30
D;JLT             //31
@SP             //32
A=M             //33
A=A-1             //34
M=0             //35
(Label1)
@SP    //IF-GOTO IF_TRUE             //36
M=M-1             //37
A=M             //38
D=M             //39
@Main.fetest$IF_TRUE             //40
D;JNE             //41
@Main.fetest$IF_FALSE    //GOTO IF_FALSE             //42
0;JMP             //43
(Main.fetest$IF_TRUE)    //LABEL IF_TRUE
@0    //POP argument 0             //44
D=A             //45
@ARG             //46
A=M+D             //47
D=M             //48
@SP             //49
A=M             //50
M=D             //51
@SP             //52
M=M+1             //53
@LCL    //RETURN             //54
D=M             //55
@endframe             //56
M=D             //57
@5             //58
D=A             //59
@endframe             //60
A=M             //61
A=A-D             //62
D=M             //63
@returnAddress             //64
M=D             //65
@SP             //66
M=M-1             //67
A=M             //68
D=M             //69
@ARG             //70
A=M             //71
M=D             //72
@ARG             //73
D=M+1             //74
@SP             //75
M=D             //76
@endframe             //77
A=M-1             //78
D=M             //79
@THAT             //80
M=D             //81
@2             //82
D=A             //83
@endframe             //84
A=M-D             //85
D=M             //86
@THIS             //87
M=D             //88
@3             //89
D=A             //90
@endframe             //91
A=M-D             //92
D=M             //93
@ARG             //94
M=D             //95
@4             //96
D=A             //97
@endframe             //98
A=M-D             //99
D=M             //100
@LCL             //101
M=D             //102
@returnAddress             //103
A=M             //104
0;JMP             //105
(Main.fetest$IF_FALSE)    //LABEL IF_FALSE
@0    //POP argument 0             //106
D=A             //107
@ARG             //108
A=M+D             //109
D=M             //110
@SP             //111
A=M             //112
M=D             //113
@SP             //114
M=M+1             //115
@1    //POP constant 1             //116
D=A             //117
@SP             //118
A=M             //119
M=D             //120
@SP             //121
M=M+1             //122
@SP    //sub             //123
M=M-1             //124
A=M             //125
D=M             //126
A=A-1             //127
M=M-D             //128
@Main.fetest$ret.1    //CALL Main.fetest 1             //129
D=A             //130
@SP             //131
A=M             //132
M=D             //133
@SP             //134
M=M+1             //135
@LCL             //136
D=M             //137
@SP             //138
A=M             //139
M=D             //140
@SP             //141
M=M+1             //142
@ARG             //143
D=M             //144
@SP             //145
A=M             //146
M=D             //147
@SP             //148
M=M+1             //149
@THIS             //150
D=M             //151
@SP             //152
A=M             //153
M=D             //154
@SP             //155
M=M+1             //156
@THAT             //157
D=M             //158
@SP             //159
A=M             //160
M=D             //161
@SP             //162
M=M+1             //163
@1             //164
D=A             //165
@SP             //166
D=M-D             //167
@5             //168
D=D-A             //169
@ARG             //170
M=D             //171
@SP             //172
D=M             //173
@LCL             //174
M=D             //175
@Main.fetest    //GOTO (CALL)             //176
0;JMP             //177
(Main.fetest$ret.1)    //RETURN ADDRESS (CALL)
@0    //POP argument 0             //178
D=A             //179
@ARG             //180
A=M+D             //181
D=M             //182
@SP             //183
A=M             //184
M=D             //185
@SP             //186
M=M+1             //187
@2    //POP constant 2             //188
D=A             //189
@SP             //190
A=M             //191
M=D             //192
@SP             //193
M=M+1             //194
@SP    //sub             //195
M=M-1             //196
A=M             //197
D=M             //198
A=A-1             //199
M=M-D             //200
@Main.fetest$ret.2    //CALL Main.fetest 1             //201
D=A             //202
@SP             //203
A=M             //204
M=D             //205
@SP             //206
M=M+1             //207
@LCL             //208
D=M             //209
@SP             //210
A=M             //211
M=D             //212
@SP             //213
M=M+1             //214
@ARG             //215
D=M             //216
@SP             //217
A=M             //218
M=D             //219
@SP             //220
M=M+1             //221
@THIS             //222
D=M             //223
@SP             //224
A=M             //225
M=D             //226
@SP             //227
M=M+1             //228
@THAT             //229
D=M             //230
@SP             //231
A=M             //232
M=D             //233
@SP             //234
M=M+1             //235
@1             //236
D=A             //237
@SP             //238
D=M-D             //239
@5             //240
D=D-A             //241
@ARG             //242
M=D             //243
@SP             //244
D=M             //245
@LCL             //246
M=D             //247
@Main.fetest    //GOTO (CALL)             //248
0;JMP             //249
(Main.fetest$ret.2)    //RETURN ADDRESS (CALL)
@SP    //add             //250
M=M-1             //251
A=M             //252
D=M             //253
A=A-1             //254
M=D+M             //255
@LCL    //RETURN             //256
D=M             //257
@endframe             //258
M=D             //259
@5             //260
D=A             //261
@endframe             //262
A=M             //263
A=A-D             //264
D=M             //265
@returnAddress             //266
M=D             //267
@SP             //268
M=M-1             //269
A=M             //270
D=M             //271
@ARG             //272
A=M             //273
M=D             //274
@ARG             //275
D=M+1             //276
@SP             //277
M=D             //278
@endframe             //279
A=M-1             //280
D=M             //281
@THAT             //282
M=D             //283
@2             //284
D=A             //285
@endframe             //286
A=M-D             //287
D=M             //288
@THIS             //289
M=D             //290
@3             //291
D=A             //292
@endframe             //293
A=M-D             //294
D=M             //295
@ARG             //296
M=D             //297
@4             //298
D=A             //299
@endframe             //300
A=M-D             //301
D=M             //302
@LCL             //303
M=D             //304
@returnAddress             //305
A=M             //306
0;JMP             //307
(Sys.init)    //FUNCTION Sys.init 0
@7    //POP constant 7             //308
D=A             //309
@SP             //310
A=M             //311
M=D             //312
@SP             //313
M=M+1             //314
@Main.fetest$ret.3    //CALL Main.fetest 1             //315
D=A             //316
@SP             //317
A=M             //318
M=D             //319
@SP             //320
M=M+1             //321
@LCL             //322
D=M             //323
@SP             //324
A=M             //325
M=D             //326
@SP             //327
M=M+1             //328
@ARG             //329
D=M             //330
@SP             //331
A=M             //332
M=D             //333
@SP             //334
M=M+1             //335
@THIS             //336
D=M             //337
@SP             //338
A=M             //339
M=D             //340
@SP             //341
M=M+1             //342
@THAT             //343
D=M             //344
@SP             //345
A=M             //346
M=D             //347
@SP             //348
M=M+1             //349
@1             //350
D=A             //351
@SP             //352
D=M-D             //353
@5             //354
D=D-A             //355
@ARG             //356
M=D             //357
@SP             //358
D=M             //359
@LCL             //360
M=D             //361
@Main.fetest    //GOTO (CALL)             //362
0;JMP             //363
(Main.fetest$ret.3)    //RETURN ADDRESS (CALL)
(Sys.init$WHILE)    //LABEL WHILE
@Sys.init$WHILE    //GOTO WHILE             //364
0;JMP             //365
