@256    //Start             //0
D=A             //1
@SP             //2
M=D             //3
@Sys.init             //4
0;JMP             //5
(Class1.set)    //FUNCTION Class1.set 0
@0    //POP argument 0             //6
D=A             //7
@ARG             //8
A=M+D             //9
D=M             //10
@SP             //11
A=M             //12
M=D             //13
@SP             //14
M=M+1             //15
@SP    //POP static 0             //16
M=M-1             //17
A=M             //18
D=M             //19
@Class1.0             //20
M=D             //21
@1    //POP argument 1             //22
D=A             //23
@ARG             //24
A=M+D             //25
D=M             //26
@SP             //27
A=M             //28
M=D             //29
@SP             //30
M=M+1             //31
@SP    //POP static 1             //32
M=M-1             //33
A=M             //34
D=M             //35
@Class1.1             //36
M=D             //37
@0    //POP constant 0             //38
D=A             //39
@SP             //40
A=M             //41
M=D             //42
@SP             //43
M=M+1             //44
@LCL    //RETURN             //45
D=M             //46
@endframe             //47
M=D             //48
@5             //49
D=A             //50
@endframe             //51
A=M             //52
A=A-D             //53
D=M             //54
@returnAddress             //55
M=D             //56
@SP             //57
M=M-1             //58
A=M             //59
D=M             //60
@ARG             //61
A=M             //62
M=D             //63
@ARG             //64
D=M+1             //65
@SP             //66
M=D             //67
@endframe             //68
A=M-1             //69
D=M             //70
@THAT             //71
M=D             //72
@2             //73
D=A             //74
@endframe             //75
A=M-D             //76
D=M             //77
@THIS             //78
M=D             //79
@3             //80
D=A             //81
@endframe             //82
A=M-D             //83
D=M             //84
@ARG             //85
M=D             //86
@4             //87
D=A             //88
@endframe             //89
A=M-D             //90
D=M             //91
@LCL             //92
M=D             //93
@returnAddress             //94
A=M             //95
0;JMP             //96
(Class1.get)    //FUNCTION Class1.get 0
@Class1.0    //POP static 0             //97
D=M             //98
@SP             //99
A=M             //100
M=D             //101
@SP             //102
M=M+1             //103
@Class1.1    //POP static 1             //104
D=M             //105
@SP             //106
A=M             //107
M=D             //108
@SP             //109
M=M+1             //110
@SP    //sub             //111
M=M-1             //112
A=M             //113
D=M             //114
A=A-1             //115
M=M-D             //116
@LCL    //RETURN             //117
D=M             //118
@endframe             //119
M=D             //120
@5             //121
D=A             //122
@endframe             //123
A=M             //124
A=A-D             //125
D=M             //126
@returnAddress             //127
M=D             //128
@SP             //129
M=M-1             //130
A=M             //131
D=M             //132
@ARG             //133
A=M             //134
M=D             //135
@ARG             //136
D=M+1             //137
@SP             //138
M=D             //139
@endframe             //140
A=M-1             //141
D=M             //142
@THAT             //143
M=D             //144
@2             //145
D=A             //146
@endframe             //147
A=M-D             //148
D=M             //149
@THIS             //150
M=D             //151
@3             //152
D=A             //153
@endframe             //154
A=M-D             //155
D=M             //156
@ARG             //157
M=D             //158
@4             //159
D=A             //160
@endframe             //161
A=M-D             //162
D=M             //163
@LCL             //164
M=D             //165
@returnAddress             //166
A=M             //167
0;JMP             //168
(Class2.set)    //FUNCTION Class2.set 0
@0    //POP argument 0             //169
D=A             //170
@ARG             //171
A=M+D             //172
D=M             //173
@SP             //174
A=M             //175
M=D             //176
@SP             //177
M=M+1             //178
@SP    //POP static 0             //179
M=M-1             //180
A=M             //181
D=M             //182
@Class2.0             //183
M=D             //184
@1    //POP argument 1             //185
D=A             //186
@ARG             //187
A=M+D             //188
D=M             //189
@SP             //190
A=M             //191
M=D             //192
@SP             //193
M=M+1             //194
@SP    //POP static 1             //195
M=M-1             //196
A=M             //197
D=M             //198
@Class2.1             //199
M=D             //200
@0    //POP constant 0             //201
D=A             //202
@SP             //203
A=M             //204
M=D             //205
@SP             //206
M=M+1             //207
@LCL    //RETURN             //208
D=M             //209
@endframe             //210
M=D             //211
@5             //212
D=A             //213
@endframe             //214
A=M             //215
A=A-D             //216
D=M             //217
@returnAddress             //218
M=D             //219
@SP             //220
M=M-1             //221
A=M             //222
D=M             //223
@ARG             //224
A=M             //225
M=D             //226
@ARG             //227
D=M+1             //228
@SP             //229
M=D             //230
@endframe             //231
A=M-1             //232
D=M             //233
@THAT             //234
M=D             //235
@2             //236
D=A             //237
@endframe             //238
A=M-D             //239
D=M             //240
@THIS             //241
M=D             //242
@3             //243
D=A             //244
@endframe             //245
A=M-D             //246
D=M             //247
@ARG             //248
M=D             //249
@4             //250
D=A             //251
@endframe             //252
A=M-D             //253
D=M             //254
@LCL             //255
M=D             //256
@returnAddress             //257
A=M             //258
0;JMP             //259
(Class2.get)    //FUNCTION Class2.get 0
@Class2.0    //POP static 0             //260
D=M             //261
@SP             //262
A=M             //263
M=D             //264
@SP             //265
M=M+1             //266
@Class2.1    //POP static 1             //267
D=M             //268
@SP             //269
A=M             //270
M=D             //271
@SP             //272
M=M+1             //273
@SP    //sub             //274
M=M-1             //275
A=M             //276
D=M             //277
A=A-1             //278
M=M-D             //279
@LCL    //RETURN             //280
D=M             //281
@endframe             //282
M=D             //283
@5             //284
D=A             //285
@endframe             //286
A=M             //287
A=A-D             //288
D=M             //289
@returnAddress             //290
M=D             //291
@SP             //292
M=M-1             //293
A=M             //294
D=M             //295
@ARG             //296
A=M             //297
M=D             //298
@ARG             //299
D=M+1             //300
@SP             //301
M=D             //302
@endframe             //303
A=M-1             //304
D=M             //305
@THAT             //306
M=D             //307
@2             //308
D=A             //309
@endframe             //310
A=M-D             //311
D=M             //312
@THIS             //313
M=D             //314
@3             //315
D=A             //316
@endframe             //317
A=M-D             //318
D=M             //319
@ARG             //320
M=D             //321
@4             //322
D=A             //323
@endframe             //324
A=M-D             //325
D=M             //326
@LCL             //327
M=D             //328
@returnAddress             //329
A=M             //330
0;JMP             //331
(Sys.init)    //FUNCTION Sys.init 0
@6    //POP constant 6             //332
D=A             //333
@SP             //334
A=M             //335
M=D             //336
@SP             //337
M=M+1             //338
@8    //POP constant 8             //339
D=A             //340
@SP             //341
A=M             //342
M=D             //343
@SP             //344
M=M+1             //345
@Class1.set$ret.1    //CALL Class1.set 2             //346
D=A             //347
@SP             //348
A=M             //349
M=D             //350
@SP             //351
M=M+1             //352
@LCL             //353
D=M             //354
@SP             //355
A=M             //356
M=D             //357
@SP             //358
M=M+1             //359
@ARG             //360
D=M             //361
@SP             //362
A=M             //363
M=D             //364
@SP             //365
M=M+1             //366
@THIS             //367
D=M             //368
@SP             //369
A=M             //370
M=D             //371
@SP             //372
M=M+1             //373
@THAT             //374
D=M             //375
@SP             //376
A=M             //377
M=D             //378
@SP             //379
M=M+1             //380
@2             //381
D=A             //382
@SP             //383
D=M-D             //384
@5             //385
D=D-A             //386
@ARG             //387
M=D             //388
@SP             //389
D=M             //390
@LCL             //391
M=D             //392
@Class1.set    //GOTO (CALL)             //393
0;JMP             //394
(Class1.set$ret.1)    //RETURN ADDRESS (CALL)
@SP    //POP temp 0             //395
M=M-1             //396
A=M             //397
D=M             //398
@5             //399
M=D             //400
@23    //POP constant 23             //401
D=A             //402
@SP             //403
A=M             //404
M=D             //405
@SP             //406
M=M+1             //407
@15    //POP constant 15             //408
D=A             //409
@SP             //410
A=M             //411
M=D             //412
@SP             //413
M=M+1             //414
@Class2.set$ret.2    //CALL Class2.set 2             //415
D=A             //416
@SP             //417
A=M             //418
M=D             //419
@SP             //420
M=M+1             //421
@LCL             //422
D=M             //423
@SP             //424
A=M             //425
M=D             //426
@SP             //427
M=M+1             //428
@ARG             //429
D=M             //430
@SP             //431
A=M             //432
M=D             //433
@SP             //434
M=M+1             //435
@THIS             //436
D=M             //437
@SP             //438
A=M             //439
M=D             //440
@SP             //441
M=M+1             //442
@THAT             //443
D=M             //444
@SP             //445
A=M             //446
M=D             //447
@SP             //448
M=M+1             //449
@2             //450
D=A             //451
@SP             //452
D=M-D             //453
@5             //454
D=D-A             //455
@ARG             //456
M=D             //457
@SP             //458
D=M             //459
@LCL             //460
M=D             //461
@Class2.set    //GOTO (CALL)             //462
0;JMP             //463
(Class2.set$ret.2)    //RETURN ADDRESS (CALL)
@SP    //POP temp 0             //464
M=M-1             //465
A=M             //466
D=M             //467
@5             //468
M=D             //469
@Class1.get$ret.3    //CALL Class1.get 0             //470
D=A             //471
@SP             //472
A=M             //473
M=D             //474
@SP             //475
M=M+1             //476
@LCL             //477
D=M             //478
@SP             //479
A=M             //480
M=D             //481
@SP             //482
M=M+1             //483
@ARG             //484
D=M             //485
@SP             //486
A=M             //487
M=D             //488
@SP             //489
M=M+1             //490
@THIS             //491
D=M             //492
@SP             //493
A=M             //494
M=D             //495
@SP             //496
M=M+1             //497
@THAT             //498
D=M             //499
@SP             //500
A=M             //501
M=D             //502
@SP             //503
M=M+1             //504
@0             //505
D=A             //506
@SP             //507
D=M-D             //508
@5             //509
D=D-A             //510
@ARG             //511
M=D             //512
@SP             //513
D=M             //514
@LCL             //515
M=D             //516
@Class1.get    //GOTO (CALL)             //517
0;JMP             //518
(Class1.get$ret.3)    //RETURN ADDRESS (CALL)
@Class2.get$ret.4    //CALL Class2.get 0             //519
D=A             //520
@SP             //521
A=M             //522
M=D             //523
@SP             //524
M=M+1             //525
@LCL             //526
D=M             //527
@SP             //528
A=M             //529
M=D             //530
@SP             //531
M=M+1             //532
@ARG             //533
D=M             //534
@SP             //535
A=M             //536
M=D             //537
@SP             //538
M=M+1             //539
@THIS             //540
D=M             //541
@SP             //542
A=M             //543
M=D             //544
@SP             //545
M=M+1             //546
@THAT             //547
D=M             //548
@SP             //549
A=M             //550
M=D             //551
@SP             //552
M=M+1             //553
@0             //554
D=A             //555
@SP             //556
D=M-D             //557
@5             //558
D=D-A             //559
@ARG             //560
M=D             //561
@SP             //562
D=M             //563
@LCL             //564
M=D             //565
@Class2.get    //GOTO (CALL)             //566
0;JMP             //567
(Class2.get$ret.4)    //RETURN ADDRESS (CALL)
(Sys.init$WHILE)    //LABEL WHILE
@Sys.init$WHILE    //GOTO WHILE             //568
0;JMP             //569
